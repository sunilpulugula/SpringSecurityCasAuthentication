<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security.xsd">

    <import resource="spring-persistent-servlet.xml"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="casAuthenticationProvider"
          class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="localUserDetailsService"/>
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties"/>
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <property name="hostnameVerifier">
                    <bean class="org.jasig.cas.client.ssl.AnyHostnameVerifier"/>
                </property>
                <constructor-arg index="0" value="${cas.server.url}"/>
            </bean>
        </property>
        <property name="key" value="my_cas_app_id"/>
    </bean>

    <bean id="successHandler" class="com.geeksoverflow.security.cas.handler.AppSuccessHandler"/>

    <!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
    <bean id="logoutFilter"
          class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="${cas.server.logout.url}"/>
        <constructor-arg>
            <bean class=
                          "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
    </bean>


    <security:http use-expressions="true" entry-point-ref="casEntryPoint">

        <security:intercept-url pattern="/" access="isAuthenticated()"/>

        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
        <security:custom-filter position="CAS_FILTER" ref="casFilter"/>
    </security:http>

    <!-- This filter handles a Single Logout Request from the CAS Server -->
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>

    <bean id="casEntryPoint"
          class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="${cas.server.login.url}"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>


    <bean id="serviceProperties"
          class="org.springframework.security.cas.ServiceProperties">
        <property name="service"
                  value="${app.url}"/>
        <property name="sendRenew" value="false"/>
    </bean>

    <bean id="casFilter"
          class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
    </bean>


    <bean name="localUserDetailsService" class="com.geeksoverflow.security.cas.service.LocalUserDetailsService"/>

</beans>